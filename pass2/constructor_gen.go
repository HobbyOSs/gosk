// Code generated by github.com/Bin-Huang/newc; DO NOT EDIT.

package pass2

import (
	"github.com/HobbyOSs/gosk/ast"
)

// NewProgramHandlerImpl Create a new ProgramHandlerImpl
func NewProgramHandlerImpl(visitor *ast.Visitor, env *Pass2) *ProgramHandlerImpl {
	return &ProgramHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewDeclareStmtHandlerImpl Create a new DeclareStmtHandlerImpl
func NewDeclareStmtHandlerImpl(visitor *ast.Visitor, env *Pass2) *DeclareStmtHandlerImpl {
	return &DeclareStmtHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewLabelStmtHandlerImpl Create a new LabelStmtHandlerImpl
func NewLabelStmtHandlerImpl(visitor *ast.Visitor, env *Pass2) *LabelStmtHandlerImpl {
	return &LabelStmtHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewExportSymStmtHandlerImpl Create a new ExportSymStmtHandlerImpl
func NewExportSymStmtHandlerImpl(visitor *ast.Visitor, env *Pass2) *ExportSymStmtHandlerImpl {
	return &ExportSymStmtHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewExternSymStmtHandlerImpl Create a new ExternSymStmtHandlerImpl
func NewExternSymStmtHandlerImpl(visitor *ast.Visitor, env *Pass2) *ExternSymStmtHandlerImpl {
	return &ExternSymStmtHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewConfigStmtHandlerImpl Create a new ConfigStmtHandlerImpl
func NewConfigStmtHandlerImpl(visitor *ast.Visitor, env *Pass2) *ConfigStmtHandlerImpl {
	return &ConfigStmtHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewMnemonicStmtHandlerImpl Create a new MnemonicStmtHandlerImpl
func NewMnemonicStmtHandlerImpl(visitor *ast.Visitor, env *Pass2) *MnemonicStmtHandlerImpl {
	return &MnemonicStmtHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewMemoryAddrExpHandlerImpl Create a new MemoryAddrExpHandlerImpl
func NewMemoryAddrExpHandlerImpl(visitor *ast.Visitor, env *Pass2) *MemoryAddrExpHandlerImpl {
	return &MemoryAddrExpHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewSegmentExpHandlerImpl Create a new SegmentExpHandlerImpl
func NewSegmentExpHandlerImpl(visitor *ast.Visitor, env *Pass2) *SegmentExpHandlerImpl {
	return &SegmentExpHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewAddExpHandlerImpl Create a new AddExpHandlerImpl
func NewAddExpHandlerImpl(visitor *ast.Visitor, env *Pass2) *AddExpHandlerImpl {
	return &AddExpHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewMultExpHandlerImpl Create a new MultExpHandlerImpl
func NewMultExpHandlerImpl(visitor *ast.Visitor, env *Pass2) *MultExpHandlerImpl {
	return &MultExpHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewImmExpHandlerImpl Create a new ImmExpHandlerImpl
func NewImmExpHandlerImpl(visitor *ast.Visitor, env *Pass2) *ImmExpHandlerImpl {
	return &ImmExpHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewNumberFactorHandlerImpl Create a new NumberFactorHandlerImpl
func NewNumberFactorHandlerImpl(visitor *ast.Visitor, env *Pass2) *NumberFactorHandlerImpl {
	return &NumberFactorHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewStringFactorHandlerImpl Create a new StringFactorHandlerImpl
func NewStringFactorHandlerImpl(visitor *ast.Visitor, env *Pass2) *StringFactorHandlerImpl {
	return &StringFactorHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewHexFactorHandlerImpl Create a new HexFactorHandlerImpl
func NewHexFactorHandlerImpl(visitor *ast.Visitor, env *Pass2) *HexFactorHandlerImpl {
	return &HexFactorHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewIdentFactorHandlerImpl Create a new IdentFactorHandlerImpl
func NewIdentFactorHandlerImpl(visitor *ast.Visitor, env *Pass2) *IdentFactorHandlerImpl {
	return &IdentFactorHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}

// NewCharFactorHandlerImpl Create a new CharFactorHandlerImpl
func NewCharFactorHandlerImpl(visitor *ast.Visitor, env *Pass2) *CharFactorHandlerImpl {
	return &CharFactorHandlerImpl{
		Visitor: visitor,
		Env:     env,
	}
}
